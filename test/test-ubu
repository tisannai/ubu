#!/usr/bin/guile -s
!#

(add-to-load-path "../lib")
(use-modules (ubu))
(use-modules (srfi srfi-64))


(define (basic-cmd ubu-cmd)
  (chdir "basic")
  (let ((ret (cmd ubu-cmd)))
    (chdir "..")
    ;; (prnl ret)
    ret))


(test-begin "ubu")

(test-equal "hello" #t
            (string=?
             (basic-cmd "ubu ubu-hello")
             "> ubu-action: ubu-hello
hello"))

(test-equal "actions" #t
            (string=?
             (basic-cmd "ubu ubu-actions")
             "> ubu-action: ubu-actions
    ubu-actions
    ubu-variables
    ubu-cli-map
    ubu-hello
    help
    setup-dirs
    compile
    link
    build
    clean
    dist-clean"))

(test-equal "help" #t
            (string=?
             (basic-cmd "ubu help")
             "> ubu-action: setup-dirs
> ubu-action: help

  Build utility for: ubu testing

    Usage:
      ubu <opts-and-cmds>

    Options:
      -p          Run in parallel (default: serial)
      -v          Verbose

    Actions:
      help            This help.
      compile         GCC compile
      link            GCC link
      build           GCC compile and link
      clean           Cleanup


  Copyright (c) 2019, Tero Isannainen"))

(test-equal "setup" #t
            (string=?
             (basic-cmd "ubu setup-dirs")
             "> ubu-action: setup-dirs
> ubu-action: setup-dirs"))

(test-equal "clean" #t
            (string=?
             (basic-cmd "ubu clean")
             "> ubu-action: setup-dirs
> ubu-action: clean
* ubu-execute: rm -f build/* bin/*"))


(test-equal "compile" #t
            (string=?
             (basic-cmd "ubu compile")
             "> ubu-action: setup-dirs
> ubu-action: compile
* ubu-execute: gcc -Wall -g -c src/hello_world.c -o build/hello_print.o
src/hello_world.c: In function ‘main’:
src/hello_world.c:7:9: warning: unused variable ‘i’ [-Wunused-variable]
    7 |     int i = 0;
      |         ^
* ubu-execute: gcc -Wall -g -c src/hello_print.c -o build/hello_world.o"))


(test-equal "link" #t
            (string=?
             (basic-cmd "ubu link")
             "> ubu-action: setup-dirs
> ubu-action: link
* ubu-execute: gcc -o bin/hello build/hello_world.o build/hello_print.o"))


(test-equal "run" #t
            (string=?
             (basic-cmd "bin/hello")
             "Hello world!"))


(test-equal "dist-clean" #t
            (string=?
             (basic-cmd "ubu dist-clean")
             "> ubu-action: setup-dirs
> ubu-action: dist-clean
* ubu-execute: rm -f build/* bin/*
* ubu-execute: rm -rf build bin"))



(test-end)
